'''–§—É–Ω–∫—Ü–∏—è is_available_date() üå∂Ô∏è

–í–æ –≤—Ä–µ–º—è –≤–∏–∑–∏—Ç–∞ –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –≥–æ—Å—Ç—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –æ—Ç–µ–ª—è –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å,
–¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ —Ç–∞ –∏–ª–∏ –∏–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞.

–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_available_date(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

    booked_dates ‚Äî —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –¥–∞—Ç, –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
    –≠–ª–µ–º–µ–Ω—Ç–æ–º —Å–ø–∏—Å–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏–±–æ –æ–¥–∏–Ω–æ—á–Ω–∞—è –¥–∞—Ç–∞, –ª–∏–±–æ –ø–µ—Ä–∏–æ–¥ (–¥–≤–µ –¥–∞—Ç—ã —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å). –ù–∞–ø—Ä–∏–º–µ—Ä:

    ['04.11.2021', '05.11.2021-09.11.2021']

    date_for_booking ‚Äî –æ–¥–∏–Ω–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–æ–≤–∞—è –¥–∞—Ç–∞ –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ (–¥–≤–µ –¥–∞—Ç—ã —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å),
    –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≥–æ—Å—Ç—å –∂–µ–ª–∞–µ—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä. –ù–∞–ø—Ä–∏–º–µ—Ä:

    '01.11.2021' –∏–ª–∏ '01.11.2021-04.11.2021'

–§—É–Ω–∫—Ü–∏—è is_available_date() –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å True, –µ—Å–ª–∏ –¥–∞—Ç–∞ –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ date_for_booking
–ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å False.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –≤ –ø–µ—Ä–∏–æ–¥–µ –ª–µ–≤–∞—è –¥–∞—Ç–∞ –≤—Å–µ–≥–¥–∞ –º–µ–Ω—å—à–µ –ø—Ä–∞–≤–æ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í –ø–µ—Ä–∏–æ–¥–µ (–¥–≤–µ –¥–∞—Ç—ã —á–µ—Ä–µ–∑ –¥–µ—Ñ–∏—Å) –≥—Ä–∞–Ω–∏—á–Ω—ã–µ –¥–∞—Ç—ã –≤–∫–ª—é—á–µ–Ω—ã.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –í —Ç–µ—Å—Ç–∏—Ä—É—é—â—É—é —Å–∏—Å—Ç–µ–º—É —Å–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Ñ—É–Ω–∫—Ü–∏—é
is_available_date(), –Ω–æ –Ω–µ –∫–æ–¥, –≤—ã–∑—ã–≤–∞—é—â–∏–π –µ–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–∞–º:


Sample Input 1:
dates = ['04.11.2021', '05.11.2021-09.11.2021']
some_date = '01.11.2021'
print(is_available_date(dates, some_date))

Sample Output 1:
True

Sample Input 2:
dates = ['04.11.2021', '05.11.2021-09.11.2021']
some_date = '01.11.2021-04.11.2021'
print(is_available_date(dates, some_date))

Sample Output 2:
False'''

def is_available_date(dates, some_date):
# –ø–æ —Ç–∏–ø—É –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–Ω–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –¥–Ω–µ–π
    if type(dates) == list:
        bad_days = list_day_from_list(dates) # —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–Ω–µ–π
    else:
        bad_days = list_date_from_s(dates)
    if type(some_date) == list:
        need_days = list_day_from_list(some_date) # —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–±—É–µ–º—ã—Ö –¥–Ω–µ–π
    else:
        need_days = list_date_from_s(some_date)
# –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–±—É–µ–º—ã—Ö –¥–Ω–µ–π, —Å–º–æ—Ç—Ä–∏–º, –Ω–µ –≤—Ö–æ–¥–∏—Ç –ª–∏ –æ–Ω –≤ —Å–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–Ω–µ–π
    for need_day in need_days:
        if need_day in bad_days:
            return False
    return True

# –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –¥–Ω–µ–π –∏–∑ –æ–±—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–Ω–µ–π
def list_day_from_list(dates):
    all_days = []
    pattern = '%d.%m.%Y'
    for i in dates:
        if len(i) == 10:
            one_day =  datetime.strptime(i, pattern)
            all_days.append(one_day)
        else:
            for j in list_date_from_s(i):
                all_days.append(j)
    return all_days

# –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Å –¥–Ω—è–º–∏ (–¥–Ω–µ–º)
def list_date_from_s(s):
    pattern = '%d.%m.%Y'
    if len(s) == 10:
        return [datetime.strptime(s, pattern)]
    else:
        l = s.split('-')
        new = []
        first = datetime.strptime(l[0], pattern)
        last = datetime.strptime(l[1], pattern)
        next_day = datetime.fromtimestamp(first.timestamp() + 24 * 60 * 60)
        new.append(first)
        new.append(next_day)
        k = 2
        while next_day != last:
            next_day = datetime.fromtimestamp(first.timestamp() + k * (24 * 60 * 60))
            new.append(next_day)
            k += 1
        return new

from datetime import datetime

dates = ['01.11.2021', '05.11.2021-09.11.2021', '12.11.2021', '15.11.2021-21.11.2021']
some_date = '06.12.2021-08.12.2021'
print(is_available_date(dates, some_date))