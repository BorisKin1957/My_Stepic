'''
–ì–æ–ª–æ–¥–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç üå∂Ô∏è

–î–∏–º–∞ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç –ø–æ–µ—Å—Ç—å, –Ω–æ –¥–µ–Ω–µ–≥ —É –Ω–µ–≥–æ –º–∞–ª–æ. –ü–æ–º–æ–≥–∏—Ç–µ –µ–º—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∞–º—ã–π –¥–µ—à–µ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç,
–∞ —Ç–∞–∫–∂–µ –º–∞–≥–∞–∑–∏–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –ø—Ä–æ–¥–∞–µ—Ç—Å—è. –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Ñ–∞–π–ª prices.csv, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
–æ —Ü–µ–Ω–∞—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö. –í –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ –∑–∞–ø–∏—Å–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞, –∞ –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö ‚Äî
—Ü–µ–Ω–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–æ–≤–∞—Ä –≤ —ç—Ç–æ–º –º–∞–≥–∞–∑–∏–Ω–µ:

–ú–∞–≥–∞–∑–∏–Ω;–¢–≤–æ—Ä–æ–≥;–ì—Ä–µ—á–∫–∞;–†–∏—Å;–ë–æ—Ä–æ–¥–∏–Ω—Å–∫–∏–π —Ö–ª–µ–±;–Ø–±–ª–æ–∫–∏;–ü–µ–ª—å–º–µ–Ω–∏;–û–≤—Å—è–Ω–æ–µ –ø–µ—á–µ–Ω—å–µ;–°–ø–∞–≥–µ—Ç—Ç–∏;–ü–µ—á–µ–Ω–∞—è —Ñ–∞—Å–æ–ª—å;–ú–æ—Ä–æ–∂–µ–Ω–æ–µ;–§–∞—Ä—à;–í–∞—Ä–µ–Ω–∏–∫–∏;–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å;–ë–∞—Ç–æ–Ω—á–∏–∫
–ü—è—Ç–µ—Ä–æ—á–∫–∞;69;133;129;83;141;90;72;123;149;89;88;106;54;84
–ú–∞–≥–Ω–∏—Ç;102;87;95;75;109;112;97;82;101;134;69;61;141;79
...

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–∞–º—ã–π –¥–µ—à–µ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –ø—Ä–æ–¥–∞–µ—Ç—Å—è,
–≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

<–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞>: <–Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞>

–ï—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, —Ç–æ —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ—Ç —Ç–æ–≤–∞—Ä, —á—å–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ–Ω—å—à–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º
—Å—Ä–∞–≤–Ω–µ–Ω–∏–∏. –ï—Å–ª–∏ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–µ—Ç—Å—è –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –ø–æ –æ–¥–Ω–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ, —Ç–æ —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ—Ç –º–∞–≥–∞–∑–∏–Ω,
—á—å–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ–Ω—å—à–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º –≤ —Ñ–∞–π–ª–µ prices.csv —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–∞ —Å –∑–∞–ø—è—Ç–æ–π, –ø—Ä–∏ —ç—Ç–æ–º –∫–∞–≤—ã—á–∫–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –£–∫–∞–∑–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ. –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞—á—É –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:

–ö–ª—É–±–Ω–∏—á–Ω—ã–π –π–æ–≥—É—Ä—Ç: –í–∫—É—Å–í–∏–ª–ª

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —è–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8.
'''

import csv

with open('prices.csv', encoding='utf-8', newline='') as file_in:
     rows = list(csv.reader(file_in, delimiter=';'))
columns = rows[0]
data = rows[1:]

# —Å–≤–µ–¥–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É {'–¢–≤–æ—Ä–æ–≥': [(69, '–ü—è—Ç–µ—Ä–æ—á–∫–∞'), (102, '–ú–∞–≥–Ω–∏—Ç'), ... , ], '–ë–∞—Ç–æ–Ω—á–∏–∫': [(84, '–ü—è—Ç–µ—Ä–æ—á–∫–∞'), (79, '–ú–∞–≥–Ω–∏—Ç')]}

lib = {}
for line in data:
     for i in range(1, len(line)):
          mag = line[0]
          if columns[i] not in lib:
               lib[columns[i]] = [(int(line[i]), mag)]
          else:
               lib[columns[i]].append((int(line[i]), mag))

# —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ lib {'–ë–∞—Ç–æ–Ω—á–∏–∫': [(57, '–≠–¥–µ–ª—å–≤–µ–π—Å'), (62, '–ê–≤–æ—Å—å–∫–∞')], '–ë–æ—Ä–æ–¥–∏–Ω—Å–∫–∏–π —Ö–ª–µ–±': [(64, '–õ–µ–Ω—Ç–∞'), (66, '–≠–¥–µ–ª—å–≤–µ–π—Å')]

new = {}
for key, value in sorted(lib.items()):
     value = sorted(value, key=lambda x: (int(x[0]), x[1]))
     new[key] = value[:2]

# —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ new [('–í–∞—Ä–µ–Ω–∏–∫–∏', [(50, '–î–∏–∫—Å–∏'), (60, '–ú–ï–¢–†–û')]), ('–ü–µ–ª—å–º–µ–Ω–∏', [(50, '–ê–ª–ª–µ—è'), (52, '–õ–µ–Ω—Ç–∞')]),...
new = sorted(new.items(), key=lambda x: x[1][0][0])

print(f'{new[0][0]}: {new[0][1][0][1]}')


'''–ù–ê–î–û –¢–ê–ö
import csv

with open('prices.csv', encoding='UTF-8') as f:
    h, *rows = csv.reader(f, delimiter=';')

goods = [(r[0], h[x], r[x]) for r in rows for x in range(1, len(h))]
#[('–ü—è—Ç–µ—Ä–æ—á–∫–∞', '–¢–≤–æ—Ä–æ–≥', '69'), ('–ü—è—Ç–µ—Ä–æ—á–∫–∞', '–ì—Ä–µ—á–∫–∞', '133'), ('–ü—è—Ç–µ—Ä–æ—á–∫–∞', '–†–∏—Å', '129'), ('–ü—è—Ç–µ—Ä–æ—á–∫–∞', '–ë–æ—Ä–æ–¥–∏–Ω—Å–∫–∏–π —Ö–ª–µ–±', '83')
cheapest = min(goods, key=lambda x: (int(x[2]), x[1], x[0]))
#('–î–∏–∫—Å–∏', '–í–∞—Ä–µ–Ω–∏–∫–∏', '50')


print(f'{cheapest[1]}: {cheapest[0]}')
'''