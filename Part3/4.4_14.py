'''
–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫–∑–∞–º–µ–Ω–∞ üå∂Ô∏è

–í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Ñ–∞–π–ª exam_results.csv, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—à–µ–¥—à–µ–º —ç–∫–∑–∞–º–µ–Ω–µ –≤ –Ω–µ–∫–æ—Ç–æ—Ä–æ–º
—É—á–µ–±–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏. –í –ø–µ—Ä–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ –∑–∞–ø–∏—Å–∞–Ω–æ –∏–º—è —Å—Ç—É–¥–µ–Ω—Ç–∞, –≤–æ –≤—Ç–æ—Ä–æ–º ‚Äî —Ñ–∞–º–∏–ª–∏—è, –≤ —Ç—Ä–µ—Ç—å–µ–º ‚Äî –æ—Ü–µ–Ω–∫–∞
–∑–∞ —ç–∫–∑–∞–º–µ–Ω, –≤ —á–µ—Ç–≤–µ—Ä—Ç–æ–º ‚Äî –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–¥–∞—á–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD HH:MM:SS, –≤ –ø—è—Ç–æ–º ‚Äî –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã:

name,surname,score,date_and_time,email
Jayson,Edwards,2,2021-11-10 10:00:00,sonnen@yahoo.com
April,Sims,3,2021-11-01 11:00:00,retoh@outlook.com
...

–ö–∞–∂–¥—ã–π —Å—Ç—É–¥–µ–Ω—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –ø–µ—Ä–µ—Å–¥–∞—Ç—å —ç–∫–∑–∞–º–µ–Ω –¥–≤–∞ —Ä–∞–∑–∞, –ø–æ—ç—Ç–æ–º—É –æ–Ω –º–æ–∂–µ—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ
–¥–æ —Ç—Ä—ë—Ö —Ä–∞–∑ —Å —Ä–∞–∑–ª–∏—á–Ω–æ–π –æ—Ü–µ–Ω–∫–æ–π –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º —Å–¥–∞—á–∏.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É, –∞ —Ç–∞–∫–∂–µ –¥–∞—Ç—É –∏
–≤—Ä–µ–º—è –µ–µ –ø–æ–ª—É—á–µ–Ω–∏—è. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ
–ø–∞—Ä—ã –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ:

    name ‚Äî –∏–º—è —Å—Ç—É–¥–µ–Ω—Ç–∞
    surname ‚Äî —Ñ–∞–º–∏–ª–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞
    best_score ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –∑–∞ —ç–∫–∑–∞–º–µ–Ω
    date_and_time ‚Äî –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    email ‚Äî –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã

–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª best_scores.json, –ø—Ä–∏—á–µ–º —Å–ª–æ–≤–∞—Ä–∏ –≤ —Å–ø–∏—Å–∫–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å
—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –Ω–∞–∑–≤–∞–Ω–∏–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –ø–æ—á—Ç.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ï—Å–ª–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Å–¥–∞—á–µ —Å—Ç—É–¥–µ–Ω—Ç –ø–æ–ª—É—á–∏–ª —Ç–∞–∫—É—é –∂–µ –æ—Ü–µ–Ω–∫—É, —á—Ç–æ –∏ –≤ –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑, —Ç–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–∞—Ç—ã —Å–ª–µ–¥—É–µ—Ç
—É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É –ø–µ—Ä–µ—Å–¥–∞—á–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –≤ —Ñ–∞–π–ª–µ exam_results.csv –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–ø—è—Ç–∞—è, –ø—Ä–∏ —ç—Ç–æ–º –∫–∞–≤—ã—á–∫–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ù–∞—á–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å —Ñ–∞–π–ª–∞ best_scores.json –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:

[
   {
      "name": "Stephen",
      "surname": "Farley",
      "best_score": 3,
      "date_and_time": "2021-11-12 12:00:00",
      "email": "aardo@mac.com"
   },
   {
      "name": "Kaylen",
      "surname": "Horne",
      "best_score": 4,
      "date_and_time": "2021-11-09 11:00:00",
      "email": "aaribaud@att.net"
   },
   ...
]

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –£–∫–∞–∑–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ. –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞—á—É –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 5. –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —è–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8.
'''

import json, csv
from datetime import datetime

with open('exam_results.csv', encoding='utf-8', newline='') as file_in:
    rows = list(csv.reader(file_in, delimiter=';'))

columns = rows[0]
data = rows[1:]
data = sorted(data, key=lambda x: x[0].split(',')[-1])

all = []
keys = ('name', 'surname', 'best_score', 'date_and_time', 'email')
for line in data:
    l = line[0].split(',')
    name, surname, score, date_and_time, email = l[0], l[1], int(l[2]), datetime.strptime(l[-2], '%Y-%m-%d %H:%M:%S'), \
    l[-1]

    flag = True
    D = dict(zip(keys, (name, surname, score, date_and_time, email)))

    for j in all:
        if j['email'] == D['email']:
            flag = False
            if (j['best_score'] < D['best_score']) or (
                    j['best_score'] == D['best_score'] and j['date_and_time'] < D['date_and_time']):
                j['best_score'] = D['best_score']
                j['date_and_time'] = D['date_and_time']
        else:
            flag = True
    if flag:
        all.append(D)

for i in all:
    i['date_and_time'] = str(i['date_and_time'])

with open('best_scores.json', 'w', encoding='utf-8') as file_out:
    json.dump(all, file_out, indent=3)